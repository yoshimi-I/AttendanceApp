// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/google/wire"
	usecase2 "work-management-app/application/usecase"
	"work-management-app/domain/service"
	"work-management-app/infrastructure/database"
	repository2 "work-management-app/infrastructure/database/repository"
	"work-management-app/presentation/controller"
)

// Injectors from wire.go:

func InitializeControllers() (*ControllersSet, error) {
	db, err := database.InitDB()
	if err != nil {
		return nil, err
	}
	userRepository := repository2.NewUserRepository(db)
	activityRepository := repository2.NewActivityRepository(db)
	userUsecase := usecase2.NewUserUsecase(userRepository, activityRepository)
	userController := controller.NewUserController(userUsecase)
	historyRepository := repository2.NewHistoryRepository(db)
	historyDomainService := service.NewHistoryDomainService()
	historyUsecase := usecase2.NewHistoryUsecase(historyRepository, userRepository, historyDomainService)
	historyController := controller.NewHistoryController(historyUsecase)
	activityDomainService := service.NewActivityDomainService(activityRepository, historyRepository)
	activityUsecase := usecase2.NewActivityUsecase(activityRepository, userRepository, activityDomainService)
	activityController := controller.NewActivityController(activityUsecase)
	controllersSet := &ControllersSet{
		UserController:     userController,
		HistoryController:  historyController,
		ActivityController: activityController,
	}
	return controllersSet, nil
}

// wire.go:

// infrastructure
var infrastructureSet = wire.NewSet(database.InitDB)

// domainService
var domainServiceSet = wire.NewSet(service.NewActivityDomainService, service.NewHistoryDomainService)

// repository
var repositorySet = wire.NewSet(repository2.NewActivityRepository, repository2.NewHistoryRepository, repository2.NewUserRepository)

// application
var usecaseSet = wire.NewSet(usecase2.NewActivityUsecase, usecase2.NewHistoryUsecase, usecase2.NewUserUsecase)

// controller
var controllerSet = wire.NewSet(controller.NewActivityController, controller.NewHistoryController, controller.NewUserController)

type ControllersSet struct {
	UserController     controller.UserController
	HistoryController  controller.HistoryController
	ActivityController controller.ActivityController
}
